searchNodes=[{"doc":"An easy-to-use XML library for Elixir. Features Convenient access via the doc[xpath] notation Supports multiple backends: EasyXML.Backend.Xmerl (default) EasyXML.Backend.Saxmerl Usage The easiest way to use EasyXML is with Mix.install/2 (requires Elixir v1.12+): Mix . install ( [ { :easyxml , &quot;~&gt; 0.1.0-dev&quot; , github : &quot;wojtekmach/easyxml&quot; , branch : &quot;main&quot; } ] ) xml = &quot;&quot;&quot; &lt;points&gt; &lt;point x=&quot;1&quot; y=&quot;2&quot;/&gt; &lt;point x=&quot;3&quot; y=&quot;4&quot;/&gt; &lt;/points&gt; &quot;&quot;&quot; doc = EasyXML . parse! ( xml ) EasyXML . xpath ( doc , &quot;//point/@x&quot; ) #=&gt; [&quot;1&quot;, &quot;3&quot;] EasyXML . xpath ( doc , &quot;//point&quot; ) |&gt; Enum . map ( &amp; &amp;1 [ &quot;@x&quot; ] ) #=&gt; [&quot;1&quot;, &quot;3&quot;] doc [ &quot;//point[1]/@x&quot; ] #=&gt; &quot;1&quot;","ref":"EasyXML.html","title":"EasyXML","type":"module"},{"doc":"Dumps the XML document into an iodata.","ref":"EasyXML.html#dump_to_iodata/1","title":"EasyXML.dump_to_iodata/1","type":"function"},{"doc":"Parses an XML string into a document. Options :backend - a module implementing EasyXML.Backend behaviour, defaults to EasyXML.Backend.Xmerl . The remaining options are passed down to the backend. Examples iex&gt; doc = EasyXML . parse! ( &quot;&lt;hello&gt;world&lt;/hello&gt;&quot; ) iex&gt; doc [ &quot;//hello&quot; ] &quot;world&quot;","ref":"EasyXML.html#parse!/2","title":"EasyXML.parse!/2","type":"function"},{"doc":"Query the XML document. Examples doc = EasyXML . parse! ( ~s|&lt;points&gt;&lt;point x=&quot;1&quot; y=&quot;2&quot;/&gt;&lt;point x=&quot;3&quot; y=&quot;4&quot;/&gt;&lt;/points&gt;| ) EasyXML . xpath ( xml , &quot;//point&quot; ) #=&gt; [#EasyXML.Doc[&lt;point x=&quot;1&quot; y=&quot;2&quot;/&gt;], #EasyXML.Doc[&lt;point x=&quot;3&quot; y=&quot;4&quot;/&gt;]] EasyXML . xpath ( xml , &quot;//point[1]/@x&quot; ) #=&gt; [&quot;1&quot;]","ref":"EasyXML.html#xpath/2","title":"EasyXML.xpath/2","type":"function"},{"doc":"Specification for the XML backends.","ref":"EasyXML.Backend.html","title":"EasyXML.Backend","type":"behaviour"},{"doc":"","ref":"EasyXML.Backend.html#c:dump_to_iodata/1","title":"EasyXML.Backend.dump_to_iodata/1","type":"callback"},{"doc":"","ref":"EasyXML.Backend.html#c:parse!/2","title":"EasyXML.Backend.parse!/2","type":"callback"},{"doc":"","ref":"EasyXML.Backend.html#c:to_algebra/2","title":"EasyXML.Backend.to_algebra/2","type":"callback"},{"doc":"","ref":"EasyXML.Backend.html#c:xpath/2","title":"EasyXML.Backend.xpath/2","type":"callback"},{"doc":"A backend based on Saxmerl . Examples iex&gt; doc = EasyXML . parse! ( &quot;&lt;hello&gt;world&lt;/hello&gt;&quot; , backend : EasyXML.Backend.Saxmerl ) iex&gt; doc [ &quot;/hello&quot; ] &quot;world&quot;","ref":"EasyXML.Backend.Saxmerl.html","title":"EasyXML.Backend.Saxmerl","type":"module"},{"doc":"A backend based on :xmerl .","ref":"EasyXML.Backend.Xmerl.html","title":"EasyXML.Backend.Xmerl","type":"module"},{"doc":"The XML document.","ref":"EasyXML.Doc.html","title":"EasyXML.Doc","type":"module"},{"doc":"Fetch the text specified by the given xpath . Examples iex&gt; doc = EasyXML . parse! ( &quot;&lt;hello&gt;world&lt;/hello&gt;&quot; ) iex&gt; doc [ &quot;hello&quot; ] { :ok , &quot;world&quot; }","ref":"EasyXML.Doc.html#fetch/2","title":"EasyXML.Doc.fetch/2","type":"function"},{"doc":"","ref":"EasyXML.Doc.html#t:t/0","title":"EasyXML.Doc.t/0","type":"type"}]
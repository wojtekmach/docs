searchNodes=[{"doc":"","ref":"Requests.html","title":"Requests","type":"module"},{"doc":"Decompresses the response body.","ref":"Requests.html#decompress/2","title":"Requests.decompress/2","type":"function"},{"doc":"Adds default request headers.Currently these headers are added:&quot;user-agent&quot; - &quot;requests/0.1.0-dev&quot;&quot;accept-encoding&quot; - &quot;gzip&quot;","ref":"Requests.html#default_headers/2","title":"Requests.default_headers/2","type":"function"},{"doc":"Makes a GET request.See request/4 for possible options.","ref":"Requests.html#get/2","title":"Requests.get/2","type":"function"},{"doc":"See get/2.","ref":"Requests.html#get!/2","title":"Requests.get!/2","type":"function"},{"doc":"Normalizes request headers.Turns atom header names into strings, e.g.: :user_agent becomes &quot;user-agent&quot;. Non-atom names are returned as is.","ref":"Requests.html#normalize_request_headers/2","title":"Requests.normalize_request_headers/2","type":"function"},{"doc":"Makes a HTTP request.Options::headers - list of request headers, defaults to [].:finch - name of the Finch pool to use, defaults to Requests.Finch that is started with the default options.:request_middleware - list of middleware to run the request through, defaults to [].:default_request_middleware - if true (default), prepends the following functions to the request middleware list:normalize_request_headers/2default_headers/2:response_middleware - list of middleware to run the response through, defaults to [].:default_response_middleware - if true (default), prepends the following functions to the response middleware list:decompress/2response_content_type/2Request middlewareA request middleware is a function that two arguments:request structoptsAn example is normalize_request_headers/2.Response middlewareA response middleware is a function that two arguments:response structoptsAn example is decompress/2.","ref":"Requests.html#request/4","title":"Requests.request/4","type":"function"},{"doc":"Decodes the response body based on the content-type header.Currently these &quot;content-type&quot; values are supported:&quot;application/json*&quot; - using Jason.decode!/1 (if Jason is available)&quot;text/csv*&quot; - using NimbleCSV.RFC4180.parse_string(body, skip_headers: false) (if NimbleCSV is available)","ref":"Requests.html#response_content_type/2","title":"Requests.response_content_type/2","type":"function"}]